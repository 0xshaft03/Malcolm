name: malcolm-iso-build-docker-wrap-push-ghcr

on:
  push:
    branches:
      - main
      - development
    paths:
      - 'malcolm-iso/**'
      - 'shared/bin/*'
      - '!shared/bin/configure-capture.py'
      - '!shared/bin/zeek*'
      - '.trigger_iso_workflow_build'
      - '.github/workflows/malcolm-iso-build-docker-wrap-push-ghcr.yml'
  workflow_dispatch:
  repository_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      actions: write
      packages: write
      contents: read
      security-events: write
    defaults:
      run:
        shell: bash
    steps:
      -
        name: Cancel previous run in progress
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          ignore_sha: true
          all_but_latest: true
          access_token: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            image=moby/buildkit:master
      -
        name: Build environment setup
        run: |
          DEBIAN_PACKAGE_LIST=(
            ant
            ant-optional
            aria2
            aspnetcore-runtime-6.0
            aspnetcore-runtime-7.0
            aspnetcore-targeting-pack-6.0
            aspnetcore-targeting-pack-7.0
            azure-cli
            clang-12
            clang-13
            clang-format-12
            clang-format-13
            clang-tidy-12
            clang-tidy-13
            clang-tools-12
            clang-tools-13
            dotnet-apphost-pack-6.0
            dotnet-apphost-pack-7.0
            dotnet-host
            dotnet-hostfxr-6.0
            dotnet-hostfxr-7.0
            dotnet-runtime-6.0
            dotnet-runtime-7.0
            dotnet-runtime-deps-6.0
            dotnet-runtime-deps-7.0
            dotnet-sdk-6.0
            dotnet-sdk-7.0
            dotnet-targeting-pack-6.0
            dotnet-targeting-pack-7.0
            firefox
            g++-10
            g++-11
            g++-9
            gfortran-10
            gfortran-11
            gfortran-9
            google-chrome-stable
            google-cloud-sdk
            liblldb-12
            liblldb-13
            libllvm12:amd64
            libllvm13:amd64
            libmagickcore-dev
            libmagickwand-dev
            libmysqlclient-dev
            libpq-dev
            mercurial
            mono-complete
            mssql-tools
            mysql-client
            mysql-server
            php-common
            php-pear
            php8.1
            php8.1-amqp
            php8.1-apcu
            php8.1-bcmath
            php8.1-bz2
            php8.1-cgi
            php8.1-cli
            php8.1-common
            php8.1-curl
            php8.1-dba
            php8.1-dev
            php8.1-enchant
            php8.1-fpm
            php8.1-gd
            php8.1-gmp
            php8.1-igbinary
            php8.1-imagick
            php8.1-imap
            php8.1-interbase
            php8.1-intl
            php8.1-ldap
            php8.1-mbstring
            php8.1-memcache
            php8.1-memcached
            php8.1-mongodb
            php8.1-msgpack
            php8.1-mysql
            php8.1-odbc
            php8.1-opcache
            php8.1-pcov
            php8.1-pgsql
            php8.1-phpdbg
            php8.1-pspell
            php8.1-readline
            php8.1-redis
            php8.1-snmp
            php8.1-soap
            php8.1-sqlite3
            php8.1-sybase
            php8.1-tidy
            php8.1-xdebug
            php8.1-xml
            php8.1-xsl
            php8.1-yaml
            php8.1-zip
            php8.1-zmq
            pollinate
            postgresql-14
            postgresql-client-14
            postgresql-client-common
            postgresql-common
            powershell
            r-base
            r-base-core
            r-base-dev
            r-base-html
            r-cran-boot
            r-cran-class
            r-cran-cluster
            r-cran-codetools
            r-cran-foreign
            r-cran-kernsmooth
            r-cran-lattice
            r-cran-mass
            r-cran-matrix
            r-cran-mgcv
            r-cran-nlme
            r-cran-nnet
            r-cran-rpart
            r-cran-spatial
            r-cran-survival
            r-doc-html
            r-recommended
            rpm
            ruby-full
            shellcheck
            snmp
            sphinxsearch
            subversion
            zsync
          )
          for i in ${DEBIAN_PACKAGE_LIST[@]}; do
            sudo env DEBIAN_FRONTEND=noninteractive apt-get -yq --purge remove "$i" >/dev/null 2>&1 || true
          done
          sudo env DEBIAN_FRONTEND=noninteractive apt-get autoremove -y >/dev/null 2>&1 || true
          sudo env DEBIAN_FRONTEND=noninteractive apt-get autoclean -y >/dev/null 2>&1 || true
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc || true
          sudo env DEBIAN_FRONTEND=noninteractive apt-get -q update
          sudo env DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y -q \
               apt-transport-https \
               bc \
               build-essential \
               ca-certificates \
               curl \
               debhelper-compat \
               debian-archive-keyring \
               debootstrap \
               genisoimage \
               gettext \
               git \
               gnupg2 \
               imagemagick \
               jq \
               po4a \
               rsync \
               software-properties-common \
               squashfs-tools \
               virt-what \
               xorriso \
               xz-utils
          df -h
          git clone --depth=1 --single-branch --recurse-submodules --shallow-submodules --branch='debian/1%20210407' 'https://salsa.debian.org/live-team/live-build.git' /tmp/live-build
          cd /tmp/live-build
          dpkg-buildpackage -b -uc -us
          cd /tmp
          sudo dpkg -i /tmp/live-build*.deb
          rm -rf /tmp/live-build
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Extract branch name
        shell: bash
        run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT
        id: extract_branch
      -
        name: Extract commit SHA
        shell: bash
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        id: extract_commit_sha
      -
        name: Extract Malcolm version
        shell: bash
        run: echo "mversion=$(grep -P "^\s+image:\s*malcolm" docker-compose.yml | awk '{print $2}' | cut -d':' -f2 | uniq -c | sort -nr | awk '{print $2}' | head -n 1)" >> $GITHUB_OUTPUT
        id: extract_malcolm_version
      -
        name: Build image
        run: |
          IMAGES=( $(grep image: docker-compose.yml | awk '{print $2}' | sort -u) )
          for IMAGE in "${IMAGES[@]}"; do
            REPO_IMAGE="$(echo "$IMAGE" | sed "s@^.*\(malcolm\)@ghcr.io/${{ github.repository_owner }}/\1@" | sed "s/:.*/:${{ steps.extract_branch.outputs.branch }}/")"
            docker pull "$REPO_IMAGE" && \
              docker tag "$REPO_IMAGE" "$IMAGE" && \
              docker rmi "$REPO_IMAGE"
          done
          DEST_IMAGES_TXZ=$(pwd)/malcolm_"$(date +%Y.%m.%d_%H:%M:%S)"_${{ steps.extract_commit_sha.outputs.sha }}_images.tar.xz
          echo "Saving Malcolm Docker images to \"$DEST_IMAGES_TXZ\""
          docker save "${IMAGES[@]}" | xz -1 > "$DEST_IMAGES_TXZ"
          for IMAGE in "${IMAGES[@]}"; do
            docker rmi "$IMAGE"
          done
          pushd ./malcolm-iso
          mkdir -p ./shared
          echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" > ./shared/environment.chroot
          sudo /usr/bin/env bash ./build.sh -r -d "$DEST_IMAGES_TXZ"
          rm -rf ./shared/ "$DEST_IMAGES_TXZ"
          sudo chmod 644 ./malcolm-*.*
          popd
      -
        name: Run Trivy vulnerability scanner
        id: trivy-scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: './malcolm-iso'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'HIGH,CRITICAL'
          vuln-type: 'os,library'
          hide-progress: true
          ignore-unfixed: true
          exit-code: '0'
      -
        name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
      -
        name: ghcr.io login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push ISO image
        uses: docker/build-push-action@v3
        with:
          context: ./malcolm-iso
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/malcolm/malcolm:${{ steps.extract_branch.outputs.branch }}
