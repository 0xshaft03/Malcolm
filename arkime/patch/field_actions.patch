diff --git a/CHANGELOG b/CHANGELOG
index 96145ded..8dc406d6 100644
--- a/CHANGELOG
+++ b/CHANGELOG
@@ -23,6 +23,10 @@ Node Versions:
 NOTICE: Restart wiseService before capture when upgrading
 NOTICE: Cross-cluster Shortcuts require you to not restart all your viewers at once after upgrading
 
+4.0.0 2022/04/xx
+  - capture - New ecsEventDatset setting
+  - viewer - field-actions to display configurable menu items on field labels
+
 3.4.2 2022/03/31
   - release - node 16.14.2
   - viewer - Packets/s, Sessions/s, Dropped/s didn't have correct total/average
diff --git a/capture/plugins/wise.js b/capture/plugins/wise.js
index 02e71ce4..03ac9949 100644
--- a/capture/plugins/wise.js
+++ b/capture/plugins/wise.js
@@ -51,7 +51,29 @@ exports.init = function (Config, emitter) {
   });
 
   emitter.on('makeRightClick', function (cb) {
-    const url = baseURL + '/rightClicks';
+    const url = baseURL + '/valueActions';
+    const req = client.request(url, function (res) {
+      let body = '';
+      res.on('data', function (chunk) {
+        body += chunk;
+      });
+      res.on('end', function () {
+        if (res.statusCode !== 200) {
+          return cb(null, {});
+        }
+        const result = JSON.parse(body);
+        return cb(null, result);
+      });
+    });
+    req.on('error', function (err) {
+      console.log('WISE Right Click ERROR', err);
+      return cb(err, {});
+    });
+    req.end();
+  });
+
+  emitter.on('makeFieldActions', function (cb) {
+    const url = baseURL + '/fieldActions';
     const req = client.request(url, function (res) {
       let body = '';
       res.on('data', function (chunk) {
diff --git a/tests/config.test.ini b/tests/config.test.ini
index 65dd4bf7..a0332e52 100644
--- a/tests/config.test.ini
+++ b/tests/config.test.ini
@@ -287,12 +287,11 @@ format=tagger
 #type=domain
 #reload=60
 
-[right-click]
+[value-actions]
 VTIP=url:https://www.virustotal.com/en/ip-address/%TEXT%/information/;name:Virus Total IP;category:ip
 VTHOST=url:https://www.virustotal.com/en/domain/%HOST%/information/;name:Virus Total Host;category:host
 VTURL=url:https://www.virustotal.com/latest-scan/%URL%;name:Virus Total URL;category:url
 
-
 [custom-fields]
 iscool=kind:termfield;count:true;friendly:Is cool;db:iscool;help:Is Cool String
 sample.md5=db:sample.md5;kind:lotermfield;friendly:Sample MD5;count:true;help:MD5 of the sample
diff --git a/viewer/apiMisc.js b/viewer/apiMisc.js
index 9d3c4a5f..cf255236 100644
--- a/viewer/apiMisc.js
+++ b/viewer/apiMisc.js
@@ -220,6 +220,35 @@ module.exports = (Config, Db, internals, sessionAPIs, userAPIs, ViewerUtils) =>
     return res.send(actions);
   };
 
+  /**
+   * GET - /api/fieldactions
+   *
+   * Retrives the actions that can be preformed on fields.
+   * @name /fieldactions
+   * @returns {object} - The list of actions that can be preformed on fields.
+   */
+  miscAPIs.getFieldActions = (req, res) => {
+    if (!req.user || !req.user.userId) {
+      return res.send({});
+    }
+
+    const actions = {};
+
+    for (const key in internals.fieldActions) {
+      const action = internals.fieldActions[key];
+      if (action.notUsers && action.notUsers[req.user.userId]) {
+        continue;
+      }
+      if (!action.users || action.users[req.user.userId]) {
+        actions[key] = action;
+      }
+
+      delete actions[key].users;
+    }
+
+    return res.send(actions);
+  };
+
   // reverse dns apis ---------------------------------------------------------
   /**
    * GET - /api/reversedns
diff --git a/viewer/internals.js b/viewer/internals.js
index 76850978..260ae1d1 100644
--- a/viewer/internals.js
+++ b/viewer/internals.js
@@ -25,6 +25,7 @@ module.exports = (app, Config) => {
     caTrustCerts: {},
     cronRunning: false,
     rightClicks: {},
+    fieldActions: {},
     pluginEmitter: new EventEmitter(),
     writers: {},
     oldDBFields: {},
diff --git a/viewer/viewer.js b/viewer/viewer.js
index 9ae6e92e..34c7605c 100755
--- a/viewer/viewer.js
+++ b/viewer/viewer.js
@@ -398,8 +398,8 @@ function createSessionDetail () {
   });
 }
 
-function createRightClicks () {
-  const mrc = Config.configMap('right-click');
+function createActions (configKey, emitter, internalsKey) {
+  const mrc = Config.configMap(configKey);
   for (const key in mrc) {
     if (mrc[key].fields) {
       mrc[key].fields = mrc[key].fields.split(',');
@@ -412,7 +412,7 @@ function createRightClicks () {
       mrc[key].users = users;
     }
   }
-  const makers = internals.pluginEmitter.listeners('makeRightClick');
+  const makers = internals.pluginEmitter.listeners(emitter);
   async.each(makers, function (cb, nextCb) {
     cb(function (err, items) {
       for (const k in items) {
@@ -424,7 +424,7 @@ function createRightClicks () {
       return nextCb();
     });
   }, function () {
-    internals.rightClicks = mrc;
+    internals[internalsKey] = mrc;
   });
 }
 
@@ -1945,13 +1945,19 @@ app.get( // titleconfig endpoint
   miscAPIs.getPageTitle
 );
 
-// value actions apis ---------------------------------------------------------
+// menu actions apis ---------------------------------------------------------
 app.get( // value actions endpoint
   ['/api/valueactions', '/api/valueActions', '/molochRightClick'],
   [ArkimeUtil.noCacheJson, checkPermissions(['webEnabled'])],
   miscAPIs.getValueActions
 );
 
+app.get( // field actions endpoint
+  ['/api/fieldactions', '/api/fieldActions'],
+  [ArkimeUtil.noCacheJson, User.checkPermissions(['webEnabled'])],
+  miscAPIs.getFieldActions
+);
+
 // reverse dns apis -----------------------------------------------------------
 app.get( // reverse dns endpoint
   ['/api/reversedns', '/reverseDNS.txt'],
@@ -2413,8 +2419,10 @@ async function main () {
     setInterval(expireCheckAll, 60 * 1000);
   }
 
-  createRightClicks();
-  setInterval(createRightClicks, 150 * 1000); // Check every 2.5 minutes
+  createActions('value-actions', 'makeRightClick', 'rightClick');
+  setInterval(() => createActions('value-actions', 'makeRightClick', 'rightClick'), 150 * 1000); // Check every 2.5 minutes
+  createActions('field-actions', 'makeFieldActions', 'fieldActions');
+  setInterval(() => createActions('field-actions', 'makeFieldActions', 'fieldActions'), 150 * 1000); // Check every 2.5 minutes
 
   if (Config.get('cronQueries', false)) { // this viewer will process the cron queries
     console.log('This node will process Periodic Queries, delayed by', internals.cronTimeout, 'seconds');
diff --git a/viewer/views/mixins.pug b/viewer/views/mixins.pug
index 81b3ac9e..8c47be68 100644
--- a/viewer/views/mixins.pug
+++ b/viewer/views/mixins.pug
@@ -20,6 +20,11 @@ mixin clickableLabel(field, title)
       | Toggle #{title} in Info column
     b-dropdown-item(@click="fieldExists('" + field  + "', '==')")
       | Add #{title} EXISTS! to query
+    +clickableFieldActions(field, true)
+
+//- Display a clickable field action in the field menu
+mixin clickableFieldActions(fieldExpr, sep)
+  field-actions(:expr=`'${fieldExpr}'`, :separator=`${sep}`)
 
 mixin arrayPrint(container, field, expr)
   if ((container && container[field]))
diff --git a/viewer/views/sessionDetail.pug b/viewer/views/sessionDetail.pug
index 7a97fde7..66285f8a 100644
--- a/viewer/views/sessionDetail.pug
+++ b/viewer/views/sessionDetail.pug
@@ -97,6 +97,7 @@ dl
           | Open Src Packets SPI Graph
         b-dropdown-item(@click="fieldExists('packets.src', '==')")
           | Add Src Packets EXISTS! to query
+        +clickableFieldActions('packets.src', false)
         b-dropdown-divider
         b-dropdown-item(@click="exportUnique('bytes.src', 0)")
           | Export Unique Src Bytes
@@ -106,6 +107,7 @@ dl
           | Open Src Bytes SPI Graph
         b-dropdown-item(@click="fieldExists('bytes.src', '==')")
           | Add Src Bytes EXISTS! to query
+        +clickableFieldActions('bytes.src', false)
         b-dropdown-divider
         b-dropdown-item(@click="exportUnique('databytes.src', 0)")
           | Export Unique Src Databytes
@@ -115,6 +117,7 @@ dl
           | Open Src Databytes SPI Graph
         b-dropdown-item(@click="fieldExists('databytes.src', '==')")
           | Add Src Databytes EXISTS! to query
+        +clickableFieldActions('databytes.src', false)
     dd
       strong.medium.ml-1 Packets
       +clickableValue('packets.src', session.source.packets)
@@ -133,6 +136,7 @@ dl
           | Open Dst Packets SPI Graph
         b-dropdown-item(@click="fieldExists('packets.dst', '==')")
           | Add Dst Packets EXISTS! to query
+        +clickableFieldActions('packets.dst', false)
         b-dropdown-divider
         b-dropdown-item(@click="exportUnique('bytes.dst', 0)")
           | Export Unique Dst Bytes
@@ -142,6 +146,7 @@ dl
           | Open Dst Bytes SPI Graph
         b-dropdown-item(@click="fieldExists('bytes.dst', '==')")
           | Add Dst Bytes EXISTS! to query
+        +clickableFieldActions('bytes.dst', false)
         b-dropdown-divider
         b-dropdown-item(@click="exportUnique('databytes.dst', 0)")
           | Export Unique Dst Databytes
@@ -151,6 +156,7 @@ dl
           | Open Dst Databytes SPI Graph
         b-dropdown-item(@click="fieldExists('databytes.dst', '==')")
           | Add Dst Databytes EXISTS! to query
+        +clickableFieldActions('databytes.dst', false)
     dd
       strong.medium.ml-1 Packets
       +clickableValue('packets.dst', session.destination.packets)
@@ -170,6 +176,7 @@ dl
           | Open Src Mac SPI Graph
         b-dropdown-item(@click="fieldExists('mac.src', '==')")
           | Add Src Mac EXISTS! to query
+        +clickableFieldActions('mac.src', false)
         b-dropdown-divider
         b-dropdown-item(@click="exportUnique('oui.src', 0)")
           | Export Unique Src OUI
@@ -179,6 +186,7 @@ dl
           | Open Src OUI SPI Graph
         b-dropdown-item(@click="fieldExists('oui.src', '==')")
           | Add Src OUI EXISTS! to query
+        +clickableFieldActions('oui.src', false)
         b-dropdown-divider
         b-dropdown-item(@click="exportUnique('mac.dst', 0)")
           | Export Unique Dst Mac
@@ -188,6 +196,7 @@ dl
           | Open Dst Mac SPI Graph
         b-dropdown-item(@click="fieldExists('mac.dst', '==')")
           | Add Dst Mac EXISTS! to query
+        +clickableFieldActions('mac.dst', false)
         b-dropdown-divider
         b-dropdown-item(@click="exportUnique('oui.dst', 0)")
           | Export Unique Dst OUI
@@ -197,6 +206,7 @@ dl
           | Open Dst OUI SPI Graph
         b-dropdown-item(@click="fieldExists('oui.dst', '==')")
           | Add Dst OUI EXISTS! to query
+        +clickableFieldActions('oui.dst', false)
         b-dropdown-divider
         b-dropdown-item(@click="exportUnique('vlan', 0)")
           | Export Unique VLan
@@ -206,6 +216,7 @@ dl
           | Open VLan SPI Graph
         b-dropdown-item(@click="fieldExists('vlan', '==')")
           | Add VLAN EXISTS! to query
+        +clickableFieldActions('vlan', false)
     dd
       strong.medium.ml-1 Src Mac
       +arrayPrint(session.source, "mac", "mac.src", true)
@@ -237,6 +248,7 @@ dl
         | Export Unique Src IP#{sep}Port with counts
       b-dropdown-item(@click="openSpiGraph('ip.src')")
         | Open Src IPv6 SPI Graph
+      +clickableFieldActions('ip.src', false)
       b-dropdown-divider
       b-dropdown-item(@click="exportUnique('port.src', 0)")
         | Export Unique Src Port
@@ -244,6 +256,7 @@ dl
         | Export Unique Src Port with counts
       b-dropdown-item(@click="openSpiGraph('port.src')")
         | Open Src Port SPI Graph
+      +clickableFieldActions('port.src', false)
       b-dropdown-divider
       b-dropdown-item(@click="exportUnique('country.src', 0)")
         | Export Unique Src Country
@@ -253,6 +266,7 @@ dl
         | Open Src Country SPI Graph
       b-dropdown-item(@click="fieldExists('country.src', '==')")
         | Add Src Country EXISTS! to query
+      +clickableFieldActions('country.src', false)
       b-dropdown-divider
       b-dropdown-item(@click="exportUnique('source.as.full', 0)")
         | Export Unique Src ASN
@@ -262,6 +276,7 @@ dl
         | Open Src ASN SPI Graph
       b-dropdown-item(@click="fieldExists('source.as.full', '==')")
         | Add Src ASN EXISTS! to query
+      +clickableFieldActions('source.as.full', false)
       b-dropdown-divider
       b-dropdown-item(@click="exportUnique('rir.src', 0)")
         | Export Unique Src RIR
@@ -271,6 +286,7 @@ dl
         | Open Src RIR SPI Graph
       b-dropdown-item(@click="fieldExists('rir.src', '==')")
         | Add Src RIR EXISTS! to query
+      +clickableFieldActions('rir.src', false)
 
   dd
     +ipPrint(session, session.source.ip, session.source.port, session.source.geo.country_iso_code, session.source.as.full, session.srcRIR, "src")
@@ -287,6 +303,7 @@ dl
         | Export Unique Dst IP#{sep}Port with counts
       b-dropdown-item(@click="openSpiGraph('ip.dst')")
         | Open Dst IPv6 SPI Graph
+      +clickableFieldActions('ip.dst', false)
       b-dropdown-divider
       b-dropdown-item(@click="exportUnique('port.dst', 0)")
         | Export Unique Dst Port
@@ -294,6 +311,7 @@ dl
         | Export Unique Dst Port with counts
       b-dropdown-item(@click="openSpiGraph('port.dst')")
         | Open Dst Port SPI Graph
+      +clickableFieldActions('port.dst', false)
       b-dropdown-divider
       b-dropdown-item(@click="exportUnique('country.dst', 0)")
         | Export Unique Dst Country
@@ -303,6 +321,7 @@ dl
         | Open Dst Country SPI Graph
       b-dropdown-item(@click="fieldExists('country.dst', '==')")
         | Add Dst Country EXISTS! to query
+      +clickableFieldActions('country.dst', false)
       b-dropdown-divider
       b-dropdown-item(@click="exportUnique('destination.as.full', 0)")
         | Export Unique Dst ASN
@@ -312,6 +331,7 @@ dl
         | Open Dst ASN SPI Graph
       b-dropdown-item(@click="fieldExists('destination.as.full', '==')")
         | Add Dst ASN EXISTS! to query
+      +clickableFieldActions('destination.as.full', false)
       b-dropdown-divider
       b-dropdown-item(@click="exportUnique('rir.dst', 0)")
         | Export Unique Dst RIR
@@ -321,6 +341,7 @@ dl
         | Open Dst RIR SPI Graph
       b-dropdown-item(@click="fieldExists('rir.dst', '==')")
         | Add Dst RIR EXISTS! to query
+      +clickableFieldActions('rir.dst', false)
 
   dd
     +ipPrint(session, session.destination.ip, session.destination.port, session.destination.geo.country_iso_code, session.destination.as.full, session.dstRIR, "dst")
@@ -336,6 +357,7 @@ dl
           | Open Src Payload8 SPI Graph
         b-dropdown-item(@click="fieldExists('payload8.src.hex', '==')")
           | Add Src Payload8 EXISTS! to query
+        +clickableFieldActions('payload8.src.hex', false)
         b-dropdown-divider
         b-dropdown-item(@click="exportUnique('payload8.dst.hex', 0)")
           | Export Unique Dst Payload8
@@ -345,6 +367,7 @@ dl
           | Open Dst Payload8 SPI Graph
         b-dropdown-item(@click="fieldExists('payload8.dst.hex', '==')")
           | Add Dst Payload8 EXISTS! to query
+        +clickableFieldActions('payload8.dst.hex', false)
 
     dd
       - function isprint(char) { return !( /[\x00-\x08\x0E-\x1F\x80-\xFF]/.test(char)); }
@@ -392,6 +415,7 @@ dl
           | Open Socks Dst SPI Graph
         b-dropdown-item(@click="fieldExists('ip.socks', '==')")
           | Add Socks Dst EXISTS! to query
+        +clickableFieldActions('ip.socks', false)
         b-dropdown-divider
         b-dropdown-item(@click="exportUnique('port.socks', 0)")
           | Export Unique Socks Port
@@ -401,6 +425,7 @@ dl
           | Open Socks Port SPI Graph
         b-dropdown-item(@click="fieldExists('port.socks', '==')")
           | Add Socks Port EXISTS! to query
+        +clickableFieldActions('port.socks', false)
         b-dropdown-divider
         b-dropdown-item(@click="exportUnique('country.socks', 0)")
           | Export Unique Socks Country
@@ -410,6 +435,7 @@ dl
           | Open Socks Country SPI Graph
         b-dropdown-item(@click="fieldExists('country.socks', '==')")
           | Add Socks Country EXISTS! to query
+        +clickableFieldActions('country.socks', false)
         b-dropdown-divider
         b-dropdown-item(@click="exportUnique('socks.ip', 0)")
           | Export Unique Socks ASN
@@ -419,6 +445,7 @@ dl
           | Open Socks ASN SPI Graph
         b-dropdown-item(@click="fieldExists('socks.ip', '==')")
           | Add Socks ASN EXISTS! to query
+        +clickableFieldActions('socks.ip', false)
         b-dropdown-divider
         b-dropdown-item(@click="exportUnique('rir.socks', 0)")
           | Export Unique Socks RIR
@@ -428,6 +455,7 @@ dl
           | Open Socks RIR SPI Graph
         b-dropdown-item(@click="fieldExists('rir.socks', '==')")
           | Add Socks RIR EXISTS! to query
+        +clickableFieldActions('rir.socks', false)
 
     dd
       +ipPrint(session, session.socks.ip, session.socks.port, session.socks.GEO, session.socks.ASN, session.socks.RIR, "socks")
@@ -442,6 +470,7 @@ dl
           | Open Socks Host SPI Graph
         b-dropdown-item(@click="fieldExists('host.socks', '==')")
           | Add Socks Host EXISTS! to query
+        +clickableFieldActions('host.socks', false)
         b-dropdown-divider
         b-dropdown-item(@click="exportUnique('port.socks', 0)")
           | Export Unique Socks Port
@@ -451,6 +480,7 @@ dl
           | Open Socks Port SPI Graph
         b-dropdown-item(@click="fieldExists('port.socks', '==')")
           | Add Socks Port EXISTS! to query
+        +clickableFieldActions('port.socks', false)
 
     dd
       +clickableValue('host.socks', session.socks.host)
@@ -477,6 +507,7 @@ dl
           | Open SYN SPI Graph
         b-dropdown-item(@click="fieldExists('tcpflags.syn', '==')")
           | Add SYN EXISTS! to query
+        +clickableFieldActions('tcpflags.syn', false)
         b-dropdown-divider
         b-dropdown-item(@click="exportUnique('tcpflags.syn-ack', 0)")
           | Export Unique SYN-ACK
@@ -486,6 +517,7 @@ dl
           | Open SYN-ACK SPI Graph
         b-dropdown-item(@click="fieldExists('tcpflags.syn-ack', '==')")
           | Add SYN-ACK EXISTS! to query
+        +clickableFieldActions('tcpflags.syn-ack', false)
         b-dropdown-divider
         b-dropdown-item(@click="exportUnique('tcpflags.ack', 0)")
           | Export Unique ACK
@@ -495,6 +527,7 @@ dl
           | Open ACK SPI Graph
         b-dropdown-item(@click="fieldExists('tcpflags.ack', '==')")
           | Add ACK EXISTS! to query
+        +clickableFieldActions('tcpflags.ack', false)
         b-dropdown-divider
         b-dropdown-item(@click="exportUnique('tcpflags.psh', 0)")
           | Export Unique PSH
@@ -504,6 +537,7 @@ dl
           | Open PSH SPI Graph
         b-dropdown-item(@click="fieldExists('tcpflags.psh', '==')")
           | Add PSH EXISTS! to query
+        +clickableFieldActions('tcpflags.psh', false)
         b-dropdown-divider
         b-dropdown-item(@click="exportUnique('tcpflags.rst', 0)")
           | Export Unique RST
@@ -513,6 +547,7 @@ dl
           | Open RST SPI Graph
         b-dropdown-item(@click="fieldExists('tcpflags.rst', '==')")
           | Add RST EXISTS! to query
+        +clickableFieldActions('tcpflags.rst', false)
         b-dropdown-divider
         b-dropdown-item(@click="exportUnique('tcpflags.fin', 0)")
           | Export Unique FIN
@@ -522,6 +557,7 @@ dl
           | Open FIN SPI Graph
         b-dropdown-item(@click="fieldExists('tcpflags.fin', '==')")
           | Add FIN EXISTS! to query
+        +clickableFieldActions('tcpflags.fin', false)
         b-dropdown-divider
         b-dropdown-item(@click="exportUnique('tcpflags.urg', 0)")
           | Export Unique URG
@@ -531,6 +567,7 @@ dl
           | Open URG SPI Graph
         b-dropdown-item(@click="fieldExists('tcpflags.urg', '==')")
           | Add URG EXISTS! to query
+        +clickableFieldActions('tcpflags.urg', false)
     dd
       strong.medium.ml-1 SYN
       +clickableValue('tcpflags.syn', session.tcpflags.syn)
@@ -556,6 +593,7 @@ dl
           | Export Unique ICMP Type with counts
         b-dropdown-item(@click="fieldExists('icmp.type', '==')")
           | Add ICMP Type EXISTS! to query
+        +clickableFieldActions('icmp.type', false)
         b-dropdown-divider
         b-dropdown-item(@click="exportUnique('icmp.code', 0)")
           | Export Unique ICMP Code
@@ -563,6 +601,7 @@ dl
           | Export Unique ICMP Code with counts
         b-dropdown-item(@click="fieldExists('icmp.code', '==')")
           | Add ICMP Code EXISTS! to query
+        +clickableFieldActions('icmp.code', false)
     dd
       strong.medium.ml-1 Type
       +arrayPrint(session.icmp, "type", "icmp.type")
@@ -577,11 +616,13 @@ dl
             | Export Unique DSCP Src
           b-dropdown-item(@click="exportUnique('dscp.src', 1)")
             | Export Unique DSCP Src with counts
+          +clickableFieldActions('dscp.src', false)
         if (session.dstDscp)
           b-dropdown-item(@click="exportUnique('dscp.dst', 0)")
             | Export Unique DSCP Dst
           b-dropdown-item(@click="exportUnique('dscp.dst', 1)")
             | Export Unique DSCP Dst with counts
+          +clickableFieldActions('dscp.dst', false)
     dd
       if (session.srcDscp)
         strong.medium.ml-1 Src
diff --git a/viewer/vueapp/src/components/sessions/FieldActions.vue b/viewer/vueapp/src/components/sessions/FieldActions.vue
new file mode 100644
index 00000000..35ca45b7
--- /dev/null
+++ b/viewer/vueapp/src/components/sessions/FieldActions.vue
@@ -0,0 +1,125 @@
+<template>
+  <span>
+    <b-dropdown-divider
+      data-testid="separator"
+      v-if="Object.keys(menuItems).length && separator"
+    />
+    <b-dropdown-item
+      v-for="(item, key) in menuItems"
+      :key="'sync-item-' + key"
+      :title="item.name"
+      :href="item.url"
+      target="_blank">
+      {{ item.name }}
+    </b-dropdown-item>
+  </span>
+</template>
+
+<script>
+export default {
+  name: 'FieldActions',
+  props: {
+    expr: { // the field object that describes the field
+      type: String,
+      required: true
+    },
+    separator: {
+      type: Boolean,
+      default: true
+    }
+  },
+  data () {
+    return {
+      menuItems: {},
+      asyncMenuItems: {}
+    };
+  },
+  watch: {
+    // watch route update of time params to rebuild the menu
+    '$route.query.date' () { this.buildMenu(); },
+    '$route.query.stopTime' () { this.buildMenu(); },
+    '$route.query.startTime' () { this.buildMenu(); },
+    '$route.query.expression' () { this.buildMenu(); },
+    fieldActions (value) {
+      // build the menu if the field actions have been updated with actions and the menu hasn't already been built
+      if (Object.keys(value).length && !Object.keys(this.menuItems).length) {
+        this.buildMenu();
+      }
+    }
+  },
+  computed: {
+    fields () { return this.$store.state.fieldsMap; },
+    fieldActions () { return this.$store.state.fieldActions || {}; }
+  },
+  mounted () {
+    this.buildMenu();
+  },
+  methods: {
+    getField (expr) {
+      if (!this.fields[expr]) { return; }
+      return this.fields[expr];
+    },
+    /* Builds the dropdown menu items to display */
+    buildMenu () {
+      const field = this.getField(this.expr);
+
+      // nothing to build if we can't find the field or there are no field actions
+      if (!field || Object.keys(this.fieldActions).length === 0) { return; }
+
+      // make field category an array if it isn't
+      field.category = Array.isArray(field.category) ? field.category : [field.category];
+
+      // parse url params to get date/start/stop
+      const urlParams = this.$route.query;
+      let dateparams, isostart, isostop;
+
+      if (urlParams.startTime && urlParams.stopTime) {
+        dateparams = `startTime=${urlParams.startTime}&stopTime=${urlParams.stopTime}`;
+        isostart = new Date(parseInt(urlParams.startTime) * 1000);
+        isostop = new Date(parseInt(urlParams.stopTime) * 1000);
+      } else {
+        isostart = new Date();
+        isostop = new Date();
+        if (urlParams.date) {
+          isostart.setHours(isostart.getHours() - parseInt(urlParams.date));
+        } else {
+          isostart.setHours(isostart.getHours() - 1);
+        }
+        dateparams = urlParams.date;
+      }
+
+      for (const key in this.fieldActions) {
+        const action = this.fieldActions[key];
+
+        const fieldNotInActionCategory = (
+          !action.category || !field.category ||
+          field.category.filter(x => action.category.includes(x)).length === 0
+        );
+        const fieldNotInActionFields = !action.fields || action.fields.indexOf(field.exp) === -1;
+
+        // field action is not applicable to this field because it is not in the action's category or field lists
+        if (fieldNotInActionCategory && fieldNotInActionFields) {
+          continue;
+        }
+
+        // replace placeholder strings in the action url
+        const result = action.url
+          .replace('%EXPRESSION%', encodeURIComponent(urlParams.expression || ''))
+          .replace('%DATE%', dateparams)
+          .replace('%ISOSTART%', isostart.toISOString())
+          .replace('%ISOSTOP%', isostop.toISOString())
+          .replace('%FIELD%', field.exp)
+          .replace('%DBFIELD%', field.dbField);
+
+        // set the menu item name for display
+        const menuItemName = (action.name || key)
+          .replace('%FIELD%', field.exp)
+          .replace('%DBFIELD%', field.dbField)
+          .replace('%FIELDNAME%', field.friendlyName);
+
+        this.$set(this.menuItems, key, { name: menuItemName, url: result });
+      }
+    }
+  }
+};
+</script>
diff --git a/viewer/vueapp/src/components/sessions/Sessions.vue b/viewer/vueapp/src/components/sessions/Sessions.vue
index 3d3fdb9d..19f4437e 100644
--- a/viewer/vueapp/src/components/sessions/Sessions.vue
+++ b/viewer/vueapp/src/components/sessions/Sessions.vue
@@ -372,6 +372,11 @@
                       @click="pivot(header.dbField, header.exp)">
                       Pivot on {{ header.friendlyName }}
                     </b-dropdown-item>
+                    <!-- field actions -->
+                    <field-actions
+                      :separator="true"
+                      :expr="header.exp"
+                    />
                   </template> <!-- /single field column -->
                   <!-- multiple field column -->
                   <template v-else-if="header.children && header.type !== 'seconds'">
@@ -410,6 +415,11 @@
                           @click="pivot(child.dbField, child.exp)">
                           Pivot on {{ child.friendlyName }}
                         </b-dropdown-item>
+                        <!-- field actions -->
+                        <field-actions
+                          :expr="child.exp"
+                          :separator="false"
+                        />
                       </template>
                     </span>
                   </template> <!-- /multiple field column -->
@@ -564,6 +574,7 @@ import MolochSessionDetail from './SessionDetail';
 import MolochCollapsible from '../utils/CollapsibleWrapper';
 import MolochVisualizations from '../visualizations/Visualizations';
 import MolochStickySessions from './StickySessions';
+import FieldActions from './FieldActions';
 // import external
 import Sortable from 'sortablejs';
 
@@ -701,7 +712,8 @@ export default {
     MolochSessionDetail,
     MolochVisualizations,
     MolochStickySessions,
-    MolochCollapsible
+    MolochCollapsible,
+    FieldActions
   },
   data: function () {
     return {
@@ -735,6 +747,7 @@ export default {
   },
   created: function () {
     this.getSessionsConfig(); // IMPORTANT: kicks off the initial search query!
+    ConfigService.getFieldActions();
 
     // watch for window resizing and update the info column width
     // this is only registered when the user has not set widths for any
diff --git a/viewer/vueapp/src/components/spiview/Spiview.vue b/viewer/vueapp/src/components/spiview/Spiview.vue
index 3b7fe969..0766e231 100644
--- a/viewer/vueapp/src/components/spiview/Spiview.vue
+++ b/viewer/vueapp/src/components/spiview/Spiview.vue
@@ -273,6 +273,10 @@
                               @click="openSpiGraph(field.dbField)">
                               Open {{ field.friendlyName }} SPI Graph
                             </b-dropdown-item>
+                            <field-actions
+                              :separator="true"
+                              :expr="field.exp"
+                            />
                           </b-dropdown>
                         </span>
                       </template>
@@ -321,6 +325,10 @@
                           @click="pivot(value)">
                           Pivot on {{ value.field.friendlyName }}
                         </b-dropdown-item>
+                        <field-actions
+                          :separator="true"
+                          :expr="value.field.exp"
+                        />
                       </b-dropdown> <!-- spiview field label button -->
                       <!-- spiview field data -->
                       <span v-if="value && value.value && value.value.buckets">
@@ -392,6 +400,7 @@
 import Vue from 'vue';
 
 import SessionsService from '../sessions/SessionsService';
+import ConfigService from '../utils/ConfigService';
 import FieldService from '../search/FieldService';
 import UserService from '../users/UserService';
 
@@ -399,6 +408,7 @@ import MolochError from '../utils/Error';
 import MolochSearch from '../search/Search';
 import MolochVisualizations from '../visualizations/Visualizations';
 import MolochCollapsible from '../utils/CollapsibleWrapper';
+import FieldActions from '../sessions/FieldActions';
 
 // import utils
 import Utils from '../utils/utils';
@@ -424,7 +434,8 @@ export default {
     MolochError,
     MolochSearch,
     MolochVisualizations,
-    MolochCollapsible
+    MolochCollapsible,
+    FieldActions
   },
   data: function () {
     return {
@@ -491,6 +502,8 @@ export default {
     } else {
       this.issueQueries();
     }
+
+    ConfigService.getFieldActions();
   },
   methods: {
     /* exposed page functions ---------------------------------------------- */
diff --git a/viewer/vueapp/src/components/utils/ConfigService.js b/viewer/vueapp/src/components/utils/ConfigService.js
index ee6dc616..7f200bee 100644
--- a/viewer/vueapp/src/components/utils/ConfigService.js
+++ b/viewer/vueapp/src/components/utils/ConfigService.js
@@ -5,6 +5,7 @@ let _molochClustersCache;
 let getMolochClustersQIP;
 let _molochClickablesCache;
 let getMolochClickablesQIP;
+let getFieldActionsQIP;
 
 export default {
   /**
@@ -58,7 +59,7 @@ export default {
     if (getMolochClickablesQIP) { return getMolochClickablesQIP; }
 
     getMolochClickablesQIP = new Promise((resolve, reject) => {
-      if (_molochClickablesCache) { resolve(_molochClickablesCache); }
+      if (_molochClickablesCache) { return resolve(_molochClickablesCache); }
 
       Vue.axios.get('api/valueactions')
         .then((response) => {
@@ -77,16 +78,49 @@ export default {
           }
 
           _molochClickablesCache = response.data;
-          resolve(response.data);
+          return resolve(response.data);
         }, (error) => {
           getMolochClickablesQIP = undefined;
-          reject(error);
+          return reject(error);
         });
     });
 
     return getMolochClickablesQIP;
   },
 
+  /**
+   * Gets the available field actions to add to field dropdown menus
+   * and caches the result (in store)
+   * @returns {Promise} Promise A promise object that signals the completion
+   *                            or rejection of the request.
+   */
+  getFieldActions: function () {
+    if (getFieldActionsQIP) { return getFieldActionsQIP; }
+
+    getFieldActionsQIP = new Promise((resolve, reject) => {
+      const fieldActions = store.getters.getFieldActions;
+      if (fieldActions && Object.keys(fieldActions).length > 0) {
+        return resolve(fieldActions);
+      }
+
+      Vue.axios.get('api/fieldactions').then((response) => {
+        getFieldActionsQIP = undefined;
+        for (const key in response.data) {
+          const item = response.data[key];
+          if (item.category !== undefined && !Array.isArray(item.category)) {
+            item.category = item.category.split(',');
+          }
+        }
+
+        store.commit('setFieldActions', response.data);
+        return resolve(response.data);
+      }).catch((error) => {
+        getFieldActionsQIP = undefined;
+        return reject(error);
+      });
+    });
+  },
+
   /**
    * Cancels any es tasks whose X-Opaque-Id equal this cancel id
    * @param {string} cancelId   The X-Opaque-Id set for the es tasks to cancel
diff --git a/viewer/vueapp/src/store.js b/viewer/vueapp/src/store.js
index 60b24452..f900265d 100644
--- a/viewer/vueapp/src/store.js
+++ b/viewer/vueapp/src/store.js
@@ -49,7 +49,8 @@ const store = new Vuex.Store({
     sortsParam: 'firstPacket:desc',
     stickySessionsBtn: false,
     showCapStartTimes: true,
-    capStartTimes: [{ nodeName: 'none', startTime: 1 }]
+    capStartTimes: [{ nodeName: 'none', startTime: 1 }],
+    fieldActions: {}
   },
   getters: {
     sessionsTableState (state) {
@@ -57,6 +58,9 @@ const store = new Vuex.Store({
         state.sessionsTableState = Utils.getDefaultTableState();
       }
       return state.sessionsTableState;
+    },
+    getFieldActions (state) {
+      return state.fieldActions;
     }
   },
   mutations: {
@@ -238,6 +242,9 @@ const store = new Vuex.Store({
           state.fieldsAliasMap[alias] = field;
         });
       }
+    },
+    setFieldActions (state, value) {
+      state.fieldActions = value;
     }
   }
 });
diff --git a/wiseService/source.fieldactions.js b/wiseService/source.fieldactions.js
new file mode 100644
index 00000000..8851535b
--- /dev/null
+++ b/wiseService/source.fieldactions.js
@@ -0,0 +1,273 @@
+/******************************************************************************/
+/*
+ *
+ * Copyright 2012-2016 AOL Inc. All rights reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this Software except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+'use strict';
+
+const fs = require('fs');
+const WISESource = require('./wiseSource.js');
+const ini = require('iniparser');
+const axios = require('axios');
+const ArkimeUtil = require('../common/arkimeUtil');
+
+class FieldActionsSource extends WISESource {
+  // ----------------------------------------------------------------------------
+  constructor (api, section) {
+    super(api, section, { });
+
+    if (section === 'right-click') {
+      this.process(api.getConfigSection(section));
+      return;
+    }
+
+    this.url = api.getConfig(section, 'url', api.getConfig(section, 'file'));
+
+    if (this.url === undefined) {
+      console.log(this.section, '- ERROR not loading', this.section, 'since no url specified in config file');
+      return;
+    }
+
+    if (this.url.startsWith('file:///')) {
+      this.url = this.url.substring(7);
+    }
+
+    if (this.url[0] === '/' || this.url.startsWith('./') || this.url.startsWith('../')) {
+      if (!fs.existsSync(this.url)) {
+        console.log(this.section, '- ERROR not loading', this.section, 'since', this.url, "doesn't exist");
+        return;
+      }
+      this.load = this.loadFile;
+      this.getSourceRaw = this.getSourceRawFile;
+      this.putSourceRaw = this.putSourceRawFile;
+    } else if (this.url.startsWith('elasticsearch://') || this.url.startsWith('elasticsearchs://')) {
+      this.url = this.url.replace('elasticsearch', 'http');
+      if (!this.url.includes('/_doc/')) {
+        throw new Error('Missing _doc in url, should be format elasticsearch://user:pass@host:port/INDEX/_doc/DOC');
+      }
+      this.load = this.loadES;
+      this.getSourceRaw = this.getSourceRawES;
+      this.putSourceRaw = this.putSourceRawES;
+    } else if (this.url.startsWith('redis')) {
+      this.load = this.loadRedis;
+      this.getSourceRaw = this.getSourceRawRedis;
+      this.putSourceRaw = this.putSourceRawRedis;
+      const redisParts = this.url.split('/');
+      if (redisParts.length !== 5) {
+        throw new Error(`Invalid redis url - ${redisParts[0]}//[:pass@]redishost[:redisport]/redisDbNum/key`);
+      }
+      this.key = redisParts.pop();
+      this.client = ArkimeUtil.createRedisClient(redisParts.join('/'), section);
+    } else {
+      console.log(this.section, '- ERROR not loading', this.section, 'don\'t know how to open', this.url);
+      return;
+    }
+
+    this.api.addSource(section, this, []);
+
+    setImmediate(this.load.bind(this));
+
+    if (this.url[0] === '/' || this.url.startsWith('../')) {
+      this.watchFile();
+    } else {
+      setInterval(this.load.bind(this), 5 * 1000 * 60);
+    }
+  }
+
+  // ----------------------------------------------------------------------------
+  process (data) {
+    const keys = Object.keys(data);
+    if (!keys) { return; }
+
+    keys.forEach((key) => {
+      const obj = {};
+      data[key].split(';').forEach((element) => {
+        const i = element.indexOf(':');
+        if (i === -1) {
+          return;
+        }
+
+        const parts = [element.slice(0, i), element.slice(i + 1)];
+        if (parts[1] === 'true') {
+          parts[1] = true;
+        } else if (parts[1] === 'false') {
+          parts[1] = false;
+        }
+        obj[parts[0]] = parts[1];
+      });
+      if (obj.fields) {
+        obj.fields = obj.fields.split(',').map(item => item.trim());
+      }
+      if (obj.users) {
+        const users = {};
+        obj.users.split(',').map(item => item.trim()).forEach((item) => {
+          users[item] = 1;
+        });
+        obj.users = users;
+      }
+      if (obj.notUsers) {
+        const users = {};
+        obj.notUsers.split(',').map(item => item.trim()).forEach((item) => {
+          users[item] = 1;
+        });
+        obj.notUsers = users;
+      }
+      this.api.addFieldAction(key, obj);
+    });
+  };
+
+  // ----------------------------------------------------------------------------
+  watchFile () {
+    // Watch file for changes, combine multiple changes into one, on move restart watch after a pause
+    this.watchTimeout = null;
+    const watchCb = (e, filename) => {
+      clearTimeout(this.watchTimeout);
+      if (e === 'rename') {
+        this.watch.close();
+        setTimeout(() => {
+          this.load();
+          this.watch = fs.watch(this.url, watchCb);
+        }, 500);
+      } else {
+        this.watchTimeout = setTimeout(() => {
+          this.watchTimeout = null;
+          this.load();
+        }, 2000);
+      }
+    };
+    this.watch = fs.watch(this.url, watchCb);
+  }
+
+  // ----------------------------------------------------------------------------
+  loadFile () {
+    if (!fs.existsSync(this.url)) {
+      console.log(this.section, '- ERROR not loading', this.section, 'since', this.url, "doesn't exist");
+      return;
+    }
+
+    const config = ini.parseSync(this.url);
+    const data = config.fieldactions || config;
+
+    this.process(data);
+  };
+
+  // ----------------------------------------------------------------------------
+  getSourceRawFile (cb) {
+    fs.readFile(this.url, (err, body) => {
+      if (err) {
+        return cb(err);
+      }
+      return cb(null, body);
+    });
+  }
+
+  // ----------------------------------------------------------------------------
+  putSourceRawFile (body, cb) {
+    fs.writeFile(this.url, body, (err) => {
+      this.process(ini.parseString(body));
+      return cb(err);
+    });
+  }
+
+  // ----------------------------------------------------------------------------
+  loadRedis () {
+    if (this.client && this.key) {
+      this.client.get(this.key, (err, data) => {
+        if (err) {
+          console.log(this.section, '- ERROR', err);
+          return;
+        }
+        if (data === null) { data = ''; }
+        this.process(ini.parseString(data));
+      });
+    }
+  };
+
+  // ----------------------------------------------------------------------------
+  getSourceRawRedis (cb) {
+    this.client.get(this.key, cb);
+  }
+
+  // ----------------------------------------------------------------------------
+  putSourceRawRedis (file, cb) {
+    this.client.set(this.key, file, (err) => {
+      this.load();
+      cb(err);
+    });
+  }
+
+  // ----------------------------------------------------------------------------
+  loadES () {
+    axios.get(this.url)
+      .then((response) => {
+        return this.process(ini.parseString(response.data._source.ini || ''));
+      })
+      .catch((error) => {
+        if (error.response && error.response.status === 404) {
+          return this.process({});
+        }
+        console.log(this.section, '- ERROR', error);
+      });
+  };
+
+  // ----------------------------------------------------------------------------
+  getSourceRawES (cb) {
+    axios.get(this.url)
+      .then((response) => {
+        cb(null, response.data._source.ini || '');
+      })
+      .catch((error) => {
+        if (error.response && error.response.status === 404) {
+          return cb(null, '');
+        }
+        return cb(error);
+      });
+  }
+
+  // ----------------------------------------------------------------------------
+  putSourceRawES (file, cb) {
+    axios.post(this.url, JSON.stringify({ ini: file }), { headers: { 'Content-Type': 'application/json' } })
+      .then((response) => {
+        this.process(ini.parseString(file));
+        cb(null);
+      })
+      .catch((error) => {
+        cb(error);
+      });
+  }
+}
+
+// ----------------------------------------------------------------------------
+exports.initSource = function (api) {
+  api.addSourceConfigDef('fieldactions', {
+    singleton: false,
+    name: 'fieldactions',
+    description: "This source monitors configured files, redis or elasticsearch for field actions to send to all the viewer instances that connect to this WISE Server. It isn't really a source in the true WISE sense, but makes it easy to edit.",
+    link: 'https://arkime.com/wise#fieldactions',
+    cacheable: false,
+    editable: true,
+    types: [], // This is a fake source, no types
+    format: 'valueactions', // Which vueapp editor to use
+    fields: [
+      { name: 'url', required: true, help: 'The file to load, can be a file path, redis url (Format is redis://[:password@]host:port/db-number/key, redis-sentinel://[[sentinelPassword]:[password]@]host[:port]/redis-name/db-number/key, or redis-cluster://[:password@]host:port/db-number/key), or elasticsearch url (elasticsearch://host:9200/INDEX/_doc/DOCNAME)' }
+    ]
+  });
+
+  const sections = api.getConfigSections().filter((e) => { return e.match(/^(right-click$|right-click:|fieldactions:)/); });
+  sections.forEach((section) => {
+    return new FieldActionsSource(api, section);
+  });
+};
+// ----------------------------------------------------------------------------
diff --git a/wiseService/wiseService.js b/wiseService/wiseService.js
index 2f625e66..fe0e843c 100644
--- a/wiseService/wiseService.js
+++ b/wiseService/wiseService.js
@@ -93,6 +93,7 @@ const internals = {
   types: {
   },
   views: {},
+  fieldActions: {},
   valueActions: {},
   workers: 1,
   regressionTests: false,
@@ -610,6 +611,15 @@ class WISESourceAPI {
     internals.valueActions[actionName] = action;
   }
 
+  /**
+   * Add a field action set
+   * @params {string} actionName - The globally unique name of this action, not shown to user
+   * @params {WISESourceAPI~ValueAction} action - The action
+   */
+  addFieldAction (actionName, action) {
+    internals.fieldActions[actionName] = action;
+  }
+
   isWebConfig () {
     return internals.webconfig;
   }
@@ -739,6 +749,16 @@ app.get('/views', [ArkimeUtil.noCacheJson], function (req, res) {
 app.get(['/rightClicks', '/valueActions'], [ArkimeUtil.noCacheJson], function (req, res) {
   res.send(internals.valueActions);
 });
+// ----------------------------------------------------------------------------
+/**
+ * GET - Used by viewer to retrieve all the field actions created by wise sources
+ *
+ * @name "/fieldActions"
+ * @returns {object|array} All the field actions
+ */
+app.get('/fieldActions', [ArkimeUtil.noCacheJson], function (req, res) {
+  res.send(internals.fieldActions);
+});
 
 // ----------------------------------------------------------------------------
 function globalAllowed (value) {
