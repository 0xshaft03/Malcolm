diff --git a/capture/field.c b/capture/field.c
index b888fae67..6c5938be9 100644
--- a/capture/field.c
+++ b/capture/field.c
@@ -122,6 +122,7 @@ int moloch_field_define_text_full(char *field, char *text, int *shortcut)
     int count = 0;
     int nolinked = 0;
     int noutf8 = 0;
+    int fake = 0;
     char *kind = 0;
     char *help = 0;
     char *db = 0;
@@ -153,6 +154,8 @@ int moloch_field_define_text_full(char *field, char *text, int *shortcut)
             nolinked = strcmp(colon, "true") == 0;
         else if (strcmp(elements[e], "noutf8") == 0)
             noutf8 = strcmp(colon, "true") == 0;
+        else if (strcmp(elements[e], "fake") == 0 || strcmp(elements[e], "viewerOnly") == 0)
+            fake = strcmp(colon, "true") == 0;
         else if (strcmp(elements[e], "friendly") == 0)
             friendly = colon;
         else if (strcmp(elements[e], "db") == 0)
@@ -242,6 +245,9 @@ int moloch_field_define_text_full(char *field, char *text, int *shortcut)
     if (!noutf8 && type == MOLOCH_FIELD_TYPE_STR_HASH)
         flags |= MOLOCH_FIELD_FLAG_FORCE_UTF8;
 
+    if (fake)
+        flags |= MOLOCH_FIELD_FLAG_FAKE;
+
     int pos =  moloch_field_define(group, kind, field, friendly, db, help, type, flags, "category", category, "transform", transform, "aliases", aliases, (char *)NULL);
     g_strfreev(elements);
     return pos;
diff --git a/capture/parsers.c b/capture/parsers.c
index 8011ca3d7..a7e298188 100644
--- a/capture/parsers.c
+++ b/capture/parsers.c
@@ -875,6 +875,10 @@ char *moloch_sprint_hex_string(char *buf, const unsigned char* data, unsigned in
 /******************************************************************************/
 void  moloch_parsers_register2(MolochSession_t *session, MolochParserFunc func, void *uw, MolochParserFreeFunc ffunc, MolochParserSaveFunc sfunc)
 {
+#ifdef DEBUG_PARSERS
+    LOG("session: %p func: %p uw: %p", session, func, uw);
+#endif
+
     if (session->parserNum > 30) {
         char ipStr[200];
         moloch_session_pretty_string(session, ipStr, sizeof(ipStr));
@@ -882,6 +886,13 @@ void  moloch_parsers_register2(MolochSession_t *session, MolochParserFunc func,
         return;
     }
 
+    // Check if this is a duplicate
+    for (int i = 0; i < session->parserNum; i++) {
+        if (session->parserInfo[i].parserFunc == func && session->parserInfo[i].uw == uw) {
+            return;
+        }
+    }
+
     if (session->parserNum >= session->parserLen) {
         if (session->parserLen == 0) {
             session->parserLen = 2;
