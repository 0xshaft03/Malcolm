#!/bin/bash

apt-get -qqy update

# aide
apt-get install --no-install-recommends -y -q aide
###

# we'll use cURL to get release information and assets from GitHub using the GitHub API
GITHUB_API_CURL_ARGS=()
GITHUB_API_CURL_ARGS+=( -fsSL )
GITHUB_API_CURL_ARGS+=( -H )
GITHUB_API_CURL_ARGS+=( "Accept: application/vnd.github.v3+json" )
[[ -n "$GITHUB_TOKEN" ]] && GITHUB_API_CURL_ARGS+=( -H ) && GITHUB_API_CURL_ARGS+=( "Authorization: token $GITHUB_TOKEN" )

# docker-compose
RELEASE_URL="https://api.github.com/repos/docker/compose/releases/latest"
OUTPUT_FILENAME="/usr/local/bin/docker-compose"
RELEASE_FILE_REGEX="docker-compose-linux-x86_64$"
curl -o "$OUTPUT_FILENAME" "${GITHUB_API_CURL_ARGS[@]}" "$(curl "${GITHUB_API_CURL_ARGS[@]}" "$(curl "${GITHUB_API_CURL_ARGS[@]}" "$RELEASE_URL" | jq '.assets_url' | tr -d '"')" | jq ".[] | select(.browser_download_url|test(\"$RELEASE_FILE_REGEX\")) | .browser_download_url" | tr -d '"')"
chmod 755 "$OUTPUT_FILENAME"

# croc
RELEASE_URL="https://api.github.com/repos/schollz/croc/releases/latest"
RELEASE_FILE_REGEX="Linux-64bit\\\.tar\\\.gz$"
cd /usr/local/bin
curl "${GITHUB_API_CURL_ARGS[@]}" "$(curl "${GITHUB_API_CURL_ARGS[@]}" "$(curl "${GITHUB_API_CURL_ARGS[@]}" "$RELEASE_URL" | jq '.assets_url' | tr -d '"')" | jq ".[] | select(.browser_download_url|test(\"$RELEASE_FILE_REGEX\")) | .browser_download_url" | tr -d '"')" | tar zxvf - croc
chmod 755 ./croc
###

# step
RELEASE_URL="https://api.github.com/repos/smallstep/cli/releases/latest"
RELEASE_FILE_REGEX="_linux_.+amd64\\\.tar\\\.gz$"
cd /tmp
mkdir -p ./step
curl "${GITHUB_API_CURL_ARGS[@]}" "$(curl "${GITHUB_API_CURL_ARGS[@]}" "$(curl "${GITHUB_API_CURL_ARGS[@]}" "$RELEASE_URL" | jq '.assets_url' | tr -d '"')" | jq ".[] | select(.browser_download_url|test(\"$RELEASE_FILE_REGEX\")) | .browser_download_url" | tr -d '"')" | tar xzf - -C ./step --strip-components 1
mv ./step/bin/step /usr/local/bin/step
chmod 755 /usr/local/bin/step
rm -rf /tmp/step*
###
