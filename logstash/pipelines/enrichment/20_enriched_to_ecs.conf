# Copyright (c) 2021 Battelle Energy Alliance, LLC.  All rights reserved.

filter {

  # Map enriched fields to ECS where possible (see https://github.com/idaholab/Malcolm/issues/16)
  # For now I will add fields rather than rename them. This will preserve backwards compatibility
  # but the records will be somewhat bigger. I'll have to address what (if anything) to do with upgrades.

# 🗹 Client - Fields about the client side of a network connection, used with server. - https://www.elastic.co/guide/en/ecs/current/ecs-client.html
# client.domain
      if ([source][hostname]) {            mutate { id => "mutate_add_field_ecs_client_domain_source_hostname"
                                                       add_field => { "[client][domain]" => "%{[source][hostname]}" } } }

# 🗹 Server - Fields about the server side of a network connection, used with client. - https://www.elastic.co/guide/en/ecs/current/ecs-server.html
# as Arkime uses source/destination for network stuff (vs. client/server) we're doing that as well for zeek logs

# server.domain
      if ([destination][hostname]) {            mutate { id => "mutate_add_field_ecs_server_domain_destination_hostname"
                                                       add_field => { "[server][domain]" => "%{[destination][hostname]}" } } }


  # 🗹 Network - Fields describing the communication path over which the event happened. - https://www.elastic.co/guide/en/ecs/current/ecs-network.html

  # network.direction (from tags assigned during 11_lookups.conf)
  if ("internal_source" in [tags]) and ("internal_destination" in [tags]) {
    mutate { id => "mutate_add_field_metadata_network_direction_internal"
             add_field => { "[@metadata][network_direction]" => "internal" } }
  } else if ("external_source" in [tags]) and ("external_destination" in [tags]) {
    mutate { id => "mutate_add_field_metadata_network_direction_external"
             add_field => { "[@metadata][network_direction]" => "external" } }
  } else if ("internal_source" in [tags]) and ("external_destination" in [tags]) {
    mutate { id => "mutate_add_field_metadata_network_direction_outbound"
             add_field => { "[@metadata][network_direction]" => "outbound" } }
  } else if ("external_source" in [tags]) and ("internal_destination" in [tags]) {
    mutate { id => "mutate_add_field_metadata_network_direction_inbound"
             add_field => { "[@metadata][network_direction]" => "inbound" } }
  }
  if ([@metadata][network_direction]) {
    mutate { id => "mutate_add_field_ecs_network_direction"
             add_field => { "[network][direction]" => "%{[@metadata][network_direction]}" } }
  }

  # network.name (based on info from [destination][segment] and [source][segment])
  if ([destination][segment]) { mutate { id => "mutate_add_field_ecs_network_name_resp"
                                         merge => { "[network][name]" => "[destination][segment]" } } }
  if ([source][segment]) { mutate { id => "mutate_add_field_ecs_network_name_orig"
                                    merge => { "[network][name]" => "[source][segment]" } } }

  # Autonomous System and Geo are handled after enrichment in 20_enriched_to_ecs.conf
  # ☐ Autonomous System - Fields describing an Autonomous System (Internet routing prefix). - https://www.elastic.co/guide/en/ecs/current/ecs-as.html
  # ☐ Geo - Fields describing a location. - https://www.elastic.co/guide/en/ecs/current/ecs-geo.html

  # ECS - various -> related.ip (all IP-type fields get rolled up into related.ip)
  if ([destination][geo][ip]) {                mutate { id => "mutate_merge_field_related_ip_zeek_destination_geo_ip"
                                                        merge => { "[related][ip]" => "[destination][geo][ip]" } } }
  if ([source][geo][ip]) {                     mutate { id => "mutate_merge_field_related_ip_zeek_source_geo_ip"
                                                        merge => { "[related][ip]" => "[source][geo][ip]" } } }
  if ([related][ip]) {
    ruby {
      id => "ruby_related_ip_uniq"
      path => "/usr/share/logstash/malcolm-ruby/make_unique_array.rb"
      script_params => {
        "field" => "[related][ip]"
      }
    }
  }

  # ecs.version is required in all events - https://www.elastic.co/guide/en/ecs/current/ecs-ecs.html
  if (![ecs][version]) { mutate { id => "mutate_add_field_ecs_version"
                                  add_field => { "[ecs][version]" => "1.5.0" } } }

  # event.ingested
  if (![event][ingested]) {
    ruby {
      id => "ruby_event_ingested_now"
      init => "require 'time'"
      code => "event.set('[event][ingested]', Time.now.to_f)"
    }
    date {
      id => "date_event_ingested_conv"
      match => [ "[event][ingested]", "UNIX" ]
      target => "[event][ingested]"
    }
  }

  # event.provider
  if (![event][provider]) { mutate { id => "mutate_add_field_event_provider_enrichment"
                                     add_field => { "[event][provider]" => "malcolm" } } }

}
