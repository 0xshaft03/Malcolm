filter {

    # If message looks like json, try to parse it as such. Otherwise, drop it like it's hot.
    if [message] =~ /^{.*}$/ {

        json { id => "json_parse_suricata"
               source => "message"
               target => "suricata" }

        mutate { id => "mutate_remove_field_suricata_message_and_stats"
                 remove_field => [ "[message]",
                                   "[suricata][stats]" ] }

        #Renaming the global fields of every Suricata event type
        mutate { id => "mutate_suricata_rename_global_fields"
                 rename => { "[suricata][app_proto]" => "network.protocol" }
                 rename => { "[suricata][community_id]" => "network.community_id" }
                 rename => { "[suricata][dest_ip]" => "destination.ip" }
                 rename => { "[suricata][dest_port]" => "destination.port" }
                 rename => { "[suricata][src_ip]" => "source.ip" }
                 rename => { "[suricata][src_port]" => "source.port" }
        }

        ###
        #
        # This section will be for renaming specific event type field names
        # that are able to be mapped to the Elastic Common Schema (ECS)
        #
        ###

        #Specific Alert renaming
        mutate {
                id => "mutate_rename_suricata_alert_severity"
                rename => { "[suricata][alert][severity]" => "[event][severity]" }
        }

        #Specific http renaming
        mutate {
                id => "mutate_rename_suricata_http"
                rename => { "[suricata][http][protocol]" => "[http][version]"}
                rename => { "[suricata][http][status]" => "[http][response][status_code]"}
        }

        #Specific dns renaming
        mutate {
                id => "mutate_rename_suricata_dns"
                rename => { "[suricata][dns][id]" => "[dns][id]"}
                rename => { "[suricata][dns][type]" => "[dns][type]"}
                rename => { "[suricata][dns][rcode]" => "[dns][response_code]"}
        }

        mutate { id => "mutate_remove_field_suricata_ja3_strings"
                 remove_field => [ "[suricata][tls][ja3][string]",
                                   "[suricata][tls][ja3s][string]" ] }

        #Specific tls renaming
        mutate {
                 id => "mutate_rename_suricata_tls"
                 rename => { "[suricata][tls][version]" => "[tls][version]"}
                 rename => { "[suricata][tls][ja3s][hash]" => "[tls][server][ja3s]"}
                 rename => { "[suricata][tls][ja3][hash]" => "[tls][client][ja3]"}
         }

         if ([tls][client][ja3] == "") {
                 mutate {
                         id => "mutate_remove_field_tls_client_ja3_suricata"
                         remove_field => [ "[tls][client][ja3]" ]
                 }
         }

         if ([tls][server][ja3s] == "") {
                 mutate {
                         id => "mutate_remove_field_tls_server_ja3s_suricata"
                         remove_field => [ "[tls][server][ja3s]" ]
                 }
         }

        #Specific fileinfo renaming
        mutate {
                id => "mutate_rename_suricata_fileinfo"
                rename => { "[suricata][fileinfo][size]" => "[file][size]"}
                rename => { "[suricata][fileinfo][sid]" => "[file][uid]"}
                rename => { "[suricata][fileinfo][filename]" => "[file][path]"}
        }

        #This is done in security onion, might be good to add, but not including it yet
        #Not in common schema, still think it would be helpful, needs to be added to Malcolm
        # if [event_type] == "alert" {
        #         if [alert][severity] == 1 {
        #                 mutate {
        #                         add_field => { "event.severity_name" => "High" }
        #                 }
        #         }
        #         if [alert][severity] == 2 {
        #                 mutate {
        #                         add_field => { "event.severity_name" => "Medium" }
        #                 }
        #         }
        #         if [alert][severity] == 3 {
        #                 mutate {
        #                         add_field => { "event.severity_name" => "Low" }
        #                 }
        #         }
        # }

        if (![event][provider]) { mutate { id => "mutate_add_field_event_provider_suricata"
                                           add_field => { "[event][provider]" => "suricata" } } }

        # rename suricata event type (eg., alert, dns, etc.) to event.dataset
        mutate { id => "mutate_rename_suricata_event_type"
                 rename => { "[suricata][event_type]" => "[event][dataset]" } }

    } else {
        drop { id => "drop_suricata_invalid_logs" }
    }

}