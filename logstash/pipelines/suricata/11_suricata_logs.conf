filter {

        ruby {
                id => "ruby_suricata_filter_3"
                code => "
                        File.write('log.txt', 'filter_3!\n', mode: 'a')
                        "
        }

        # If message looks like json, try to parse it as such. Otherwise, fall back to csv or grok.
        if [message] =~ /^{.*}$/ {
                json {
                        source => "message"
                }

                # I recommend renaming the fields below to be consistent with other log sources.  This makes it easy to "pivot" between logs
                # mutate {        
                #         rename => [ "src_ip", "source.ip" ]
                #         rename => [ "dest_ip", "destination.ip" ]
                #         rename => [ "src_port", "source.port" ]
                #         rename => [ "dest_port", "destination.port" ]
                #         rename => [ "timestamp", "@timestamp" ]
                #         rename => [ "event_type", "event.type" ] #needs to be added to Malcolm
                #         rename => [ "proto", "network.transport" ]
                #         For Alert Fields
                #         rename => [ "alert.gid", "event.id" ] # May not be the right field to rename
                #         rename => [ "alert.action", "event.action" ] # May not be the right field to rename
                #         rename => [ "alert.signature_id", "suricata.signatures.signature_id" ] # May not be the right field to rename, Needs to be added to Malcolm
                #         rename => [ "alert.signature", "suricata.signatures.event_message" ] # May not be the right field to rename, Needs to be added to Malcolm
                #         rename => [ "alert.app_proto", "network.protocol" ] # May not be the right field to rename
                #         rename => [ "alert.rev", "suricata.signatures.signature_revision" ] # May not be the right field to rename, Needs to be added to Malcolm
                #         rename => [ "alert.severity", "event.severity" ] # May not be the right field to rename, Needs to be added to Malcolm
                #         rename => [ "alert.category", "event.category" ] # May not be the right field to rename
                #         Keep pcap name, use something logical fields?   
                # }
                #if [event_type] == "alert" {
                #         if [alert][severity] == 1 {
                #                 mutate {
                #                         add_field => { "event.severity_name" => "High" } # Not in common schema, still think it would be helpful, needs to be added to Malcolm
                #                 }
                #         }
                #         if [alert][severity] == 2 {
                #                 mutate {
                #                         add_field => { "event.severity_name" => "Medium" }
                #                 }
                #         }
                #         if [alert][severity] == 3 {
                #                 mutate {
                #                         add_field => { "event.severity_name" => "Low" }
                #                 }
                #         }
                #  }
                #
                #
        

                ruby {
                        id => "ruby_suricata_hello_world"
                        code => "
                                File.write('log.txt', 'Hello World!\n', mode: 'a')
                                "
                }


                # ###### This is from security onion.  I think it will be good #############
                # # This will translate the alert.severity field into a severity field of either High, Medium, or Low
                # if [event_type] == "alert" {
                #         if [alert][severity] == 1 {
                #                 mutate {
                #                         add_field => { "severity" => "High" }
                #                 }
                #         }
                #         if [alert][severity] == 2 {
                #                 mutate {
                #                         add_field => { "severity" => "Medium" }
                #                 }
                #         }
                #         if [alert][severity] == 3 {
                #                 mutate {
                #                         add_field => { "severity" => "Low" }
                #                 }
                #         }
                #                 # If the alert is a Snort GPL alert break it apart for easier reading and categorization
                #         if [alert][signature] =~ "GPL " {
                #                 # This will parse out the category type from the alert
                #                 grok {
                #                         match => { "[alert][signature]" => "GPL\s+%{DATA:category}\s" }
                #                 }
                #                 # This will store the category
                #                 mutate {
                #                         add_field => { "rule_type" => "Snort GPL" }
                #                         lowercase => [ "category" ]
                #                 }
                #         }
                #                 # If the alert is an Emerging Threat alert break it apart for easier reading and categorization
                #         if [alert][signature] =~ "ET " {
                #                 # This will parse out the category type from the alert
                #                 grok {
                #                         match => { "[alert][signature]" => "ET\s+%{DATA:category}\s" }
                #                 }
                #                 # This will store the category
                #                 mutate {
                #                         add_field => { "rule_type" => "Emerging Threats" }
                #                         lowercase => [ "category" ]
                #                 }
                #         }
                #         # This section adds URLs to lookup information about a rule online
                #         if [rule_type] == "Snort GPL" {
                #                 mutate {
                #                         add_field => [ "signature_info", "https://www.snort.org/search?query=%{[alert][gid]}-%{[alert][signature_id]}" ]
                #                 }
                #         }
                #         if [rule_type] == "Emerging Threats" {
                #                 mutate {
                #                         add_field => [ "signature_info", "http://doc.emergingthreats.net/%{[alert][signature_id]}" ]
                #                 }
                #         }
                # }
        }
        #  else {
        #         drop { id => "drop_suricata_invalid_logs" }
        # }

}