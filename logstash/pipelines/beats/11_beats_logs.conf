filter {

  if ([agent][type] == "filebeat") and ([event][module] == "nginx") {

    # event.hash will be done based on event.original in 98_finalize.conf

    if ([event][dataset] == "nginx.access") {
      grok {
        id => "grok_beat_nginx_access"
        patterns_dir => "/usr/share/logstash/malcolm-patterns"
        match => { "[event][original]" => "%{NGINX_ACCESS}" }
        # remove_tag => ["_grokparsefailure"]
      }
    }
    if ([event][dataset] == "nginx.error") {
      grok {
        id => "grok_beat_nginx_error"
        patterns_dir => "/usr/share/logstash/malcolm-patterns"
        match => { "[event][original]" => "%{NGINX_ERROR}" }
        # remove_tag => ["_grokparsefailure"]
      }
    }

    if ([timestamp]) {
      date {
        id => "date_beats_nginx_timestamp"
        match => [ "[timestamp]", "dd/MMM/yyyy:HH:mm:ss Z", "yyyy/MM/dd HH:mm:ss" ]
        target => "[@timestamp]"
        remove_field => [ "[timestamp]" ]
      }
    }

    mutate { id => "mutate_replace_agent_type_beats_filebeat_nginx"
             replace => { "[agent][type]" => "nginx" } }

  } else if ([agent][type] == "auditbeat") {

    if (![event][hash]) {
      fingerprint {
        id => "fingerprint_malcolm_beats_auditbeat"
        source => [ "[host][name]",
                    "[event][module]",
                    "[event][kind]",
                    "[event][category]",
                    "[event][action]",
                    "[auditd][session]",
                    "[auditd][sequence]",
                    "[process][pid]",
                    "[@timestamp]" ]
        concatenate_sources => true
        # uses event.hash
        ecs_compatibility => "v8"
        method => "MURMUR3_128"
        base64encode => true
      }
    }

  } else if ([agent][type] == "filebeat") and ([input][type] == "syslog") {

    if (![event][hash]) {
      fingerprint {
        id => "fingerprint_malcolm_beats_filebeat_syslog"
        source => [ "[host][name]",
                    "[event][module]",
                    "[syslog][facility]",
                    "[syslog][priority]",
                    "[process][program]",
                    "[event][original]",
                    "[process][pid]",
                    "[@timestamp]" ]
        concatenate_sources => true
        # uses event.hash
        ecs_compatibility => "v8"
        method => "MURMUR3_128"
        base64encode => true
      }
    }

    mutate { id => "mutate_replace_agent_type_beats_filebeat_syslog"
             replace => { "[agent][type]" => "syslog" } }

  } else if ([agent][type] == "metricbeat") {

    if (![event][hash]) {
      fingerprint {
        id => "fingerprint_malcolm_beats_metricbeat"
        source => [ "[host][name]",
                    "[event][module]",
                    "[event][dataset]",
                    "[metricset][name]",
                    "[metricset][period]",
                    "[process][pid]",
                    "[@timestamp]" ]
        concatenate_sources => true
        # uses event.hash
        ecs_compatibility => "v8"
        method => "MURMUR3_128"
        base64encode => true
      }
    }

  } else if ("_malcolm_heatbeat" in [tags]) {

    if (![event][hash]) {
      fingerprint {
        id => "fingerprint_malcolm_beats_heatbeat"
        source => [ "[host][name]",
                    "[sensors][adapter]",
                    "[sensors][class]",
                    "[sensors][label]",
                    "[sensors][name]",
                    "[sensors][units]",
                    "[sensors][value]",
                    "[@timestamp]" ]
        concatenate_sources => true
        # uses event.hash
        ecs_compatibility => "v8"
        method => "MURMUR3_128"
        base64encode => true
      }
    }

  } else if ("_malcolm_miscbeat" in [tags]) {

    if ([fluentbit][input]) {
      mutate { id => "mutate_replace_event_module_fluentbit_input"
               replace => { "[event][module]" => "%{[fluentbit][input]}" } }
    }

    if ([date]) {
      date {
        id => "date_beats_miscbeat_fluentbit_date"
        match => [ "[date]", "UNIX" ]
        target => "[@timestamp]"
        remove_field => [ "[date]" ]
      }
    }

    if (![event][hash]) {
      fingerprint {
        id => "fingerprint_malcolm_beats_miscbeat"
        source => [ "[host][name]",
                    "[agent][type]",
                    "[event][module]",
                    "[@timestamp]" ]
        concatenate_sources => true
        # uses event.hash
        ecs_compatibility => "v8"
        method => "MURMUR3_128"
        base64encode => true
      }
    }

  } # event.module (nginx/auditd/etc.)

}